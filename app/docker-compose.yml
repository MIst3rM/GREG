version: '3.8'
services:

  nginx:
    image: nginx:1.23.1
    ports:
      - 80:80
    volumes:
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend

  frontend:
    build: ./src/frontend
    ports:
      - 8080:8080
    working_dir: /var/www/frontend
    volumes:
      - ./src/frontend:/var/www/frontend
    env_file:
      - ./.env
    environment:
      VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
      VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
      VITE_AUTH0_CALLBACK_URL: ${VITE_AUTH0_CALLBACK_URL}
      VITE_AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      VITE_AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      VITE_AWS_REGION: ${AWS_REGION}
    depends_on:
      - backend

  backend:
    build: ./src/backend
    ports:
      - 8090:8090
    working_dir: /app
    volumes:
      - ./src/backend:/app
    env_file:
      - ./.env
    environment:
      DYNAMO_ENDPOINT: ${DYNAMO_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}

  # dynamodb-local:
  #   command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
  #   image: "amazon/dynamodb-local:1.20.0"
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - "./src/dynamodb:/home/dynamodblocal/data"
  #   working_dir: /home/dynamodblocal

  # dynamodb-admin:
  #   image: aaronshaf/dynamodb-admin:latest
  #   ports:
  #     - 8001:8001
  #   env_file:
  #     - ./.env
  #   environment:
  #     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  #     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  #     AWS_REGION: ${AWS_REGION}
  #     DYNAMO_ENDPOINT: ${DYNAMO_ENDPOINT}
  #   depends_on:
  #     - "dynamodb-local"