plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
//	id 'io.reflectoring.spring-boot-devtools' version '0.0.3'
}

group = 'com.coen424.survey'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation platform('software.amazon.awssdk:bom:2.17.276')
	implementation 'software.amazon.awssdk:dynamodb-enhanced'
	implementation group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.1.0'
	implementation group: 'software.amazon.awssdk', name: 'lambda', version: '2.18.21'
	implementation group: 'software.amazon.awssdk', name: 'iam', version: '2.18.21'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: '5.7.5'
	implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation group: 'software.amazon.awssdk', name: 's3', version: '2.18.28'

}

bootJar {
	classpath configurations.developmentOnly
}

tasks.create(name: 'buildAndReload'){
	dependsOn build
	mustRunAfter build    // buildAndReload must run after the source files are built into class files using build task
	doLast {
		new File(".", "reload-trigger.txt").text = "${System.currentTimeMillis()}" // update trigger file in root folder for hot reload
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
